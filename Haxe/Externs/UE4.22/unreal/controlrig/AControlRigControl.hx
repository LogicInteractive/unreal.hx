/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.controlrig;

/**
  An actor used to represent a rig control
**/
@:umodule("ControlRig")
@:glueCppIncludes("ControlRigControl.h")
@:uextern @:uclass extern class AControlRigControl extends unreal.AActor {
  
  /**
    Event called when the transform of this control has changed
  **/
  @:ufunction(BlueprintImplementableEvent) public function OnTransformChanged(NewTransform : unreal.Const<unreal.PRef<unreal.FTransform>>) : Void;
  
  /**
    Event called when the enabled state of this control has changed
  **/
  @:ufunction(BlueprintImplementableEvent) public function OnEnabledChanged(bIsEnabled : Bool) : Void;
  
  /**
    Event called when the selection state of this control has changed
  **/
  @:ufunction(BlueprintImplementableEvent) public function OnSelectionChanged(bIsSelected : Bool) : Void;
  
  /**
    Event called when the hovered state of this control has changed
  **/
  @:ufunction(BlueprintImplementableEvent) public function OnHoveredChanged(bIsSelected : Bool) : Void;
  
  /**
    Event called when the manipulating state of this control has changed
  **/
  @:ufunction(BlueprintImplementableEvent) public function OnManipulatingChanged(bIsManipulating : Bool) : Void;
  
  /**
    Whether this control is being manipulated
  **/
  @:uproperty public var bManipulating : Bool;
  
  /**
    Whether this control is hovered
  **/
  @:uproperty public var bHovered : Bool;
  
  /**
    Whether this control is selected
  **/
  @:uproperty public var bSelected : Bool;
  
  /**
    Whether this control is enabled
  **/
  @:uproperty public var bEnabled : Bool;
  
  /**
    The transform (in world space) used by this control
  **/
  @:uproperty public var Transform : unreal.FTransform;
  
  /**
    Property path to rig property we are controlling
  **/
  @:uproperty public var PropertyPath : unreal.FString;
  
}
