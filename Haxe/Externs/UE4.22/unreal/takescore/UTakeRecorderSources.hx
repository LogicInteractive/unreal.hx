/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.takescore;

/**
  A list of sources to record for any given take. Stored as meta-data on ULevelSequence through ULevelSequence::FindMetaData<UTakeRecorderSources>
**/
@:umodule("TakesCore")
@:glueCppIncludes("TakeRecorderSources.h")
@:uextern @:uclass extern class UTakeRecorderSources extends unreal.UObject {
  
  /**
    Add a new source to this source list of the templated type
    
    @param InSourceType    The class type of the source to add
    @return An instance of the specified source type
  **/
  @:ufunction(BlueprintCallable) @:final public function AddSource(InSourceType : unreal.TSubclassOf<unreal.takescore.UTakeRecorderSource>) : unreal.takescore.UTakeRecorderSource;
  
  /**
    Remove the specified source from this list
    
    @param InSource        The source to remove
  **/
  @:ufunction(BlueprintCallable) @:final public function RemoveSource(InSource : unreal.takescore.UTakeRecorderSource) : Void;
  
  /**
    Retrieves a copy of the list of sources that are being recorded. This is intended for Blueprint usages which cannot
    use TArrayView.
    DO NOT MODIFY THIS ARRAY, modifications will be lost.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetSourcesCopy() : unreal.TArray<unreal.takescore.UTakeRecorderSource>;
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetRecordToSubSequence() : Bool;
  @:ufunction(BlueprintCallable) @:final public function SetRecordToSubSequence(bValue : Bool) : Void;
  
  /**
    Calls the recording initialization flows on each of the specified sources.
  **/
  @:ufunction(BlueprintCallable) @:final public function StartRecordingSource(InSources : unreal.TArray<unreal.takescore.UTakeRecorderSource>, CurrentTiimecode : unreal.Const<unreal.PRef<unreal.FTimecode>>) : Void;
  
}
