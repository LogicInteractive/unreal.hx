/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.takescore;

/**
  Base class for all sources that can be recorded with the Take Recorder. Custom recording sources can
  be created by inheriting from this class and implementing the Start/Tick/Stop recording functions.
  The level sequence that the recording is being placed into is provided so that the take can decide
  to store the data directly in the resulting level sequence, but sources are not limited to generating
  data in the specified Level Sequence. The source should be registered with the ITakeRecorderModule for
  it to show up in the Take Recorder UI. If creating a recording setup via code you can just add instances
  of your Source to the UTakeRecorderSources instance you're using to record and skip registering them with
  the module.
  
  Sources should reset their state before recording as there is not a guarantee that the object will be newly
  created for each recording.
**/
@:umodule("TakesCore")
@:glueCppIncludes("TakeRecorderSource.h")
@:uextern @:uclass extern class UTakeRecorderSource extends unreal.UObject {
  @:uproperty public var TrackTint : unreal.FColor;
  @:uproperty public var TakeNumber : unreal.Int32;
  
  /**
    True if this source is cued for recording or not
  **/
  @:uproperty public var bEnabled : Bool;
  
}
