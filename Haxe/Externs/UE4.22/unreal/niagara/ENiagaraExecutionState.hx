/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.niagara;

@:umodule("Niagara")
@:glueCppIncludes("Public/NiagaraTypes.h")
@:uname("ENiagaraExecutionState")
@:class @:uextern @:uenum extern enum ENiagaraExecutionState {
  
  /**
    Run all scripts. Allow spawning.
  **/
  Active;
  
  /**
    Run all scripts but suppress any new spawning.
  **/
  Inactive;
  
  /**
    Clear all existing particles and move to inactive.
  **/
  InactiveClear;
  
  /**
    Complete. When the system or all emitters are complete the effect is considered finished.
  **/
  Complete;
  
  /**
    Emitter only. Emitter is disabled. Will not tick or render again until a full re initialization of the system.
  **/
  Disabled;
  
  /**
    insert new states before
  **/
  Num;
  
}
