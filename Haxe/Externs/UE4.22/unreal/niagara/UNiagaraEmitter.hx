/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.niagara;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  UNiagaraEmitter stores the attributes of an FNiagaraEmitterInstance
  that need to be serialized and are used for its initialization
**/
@:umodule("Niagara")
@:glueCppIncludes("NiagaraEmitter.h")
@:uextern @:uclass extern class UNiagaraEmitter extends unreal.UObject {
  #if WITH_EDITORONLY_DATA
  @:uproperty public var TemplateAssetDescription : unreal.FText;
  @:uproperty public var bIsTemplateAsset : Bool;
  
  /**
    Internal: Indicates the thumbnail image is out of date.
  **/
  @:uproperty public var ThumbnailImageOutOfDate : Bool;
  
  /**
    Internal: The thumbnail image.
  **/
  @:uproperty public var ThumbnailImage : unreal.UTexture2D;
  
  /**
    Data used by the editor to maintain UI state etc..
  **/
  @:uproperty public var EditorData : unreal.UObject;
  
  /**
    'Source' data/graphs for the scripts used by this emitter.
  **/
  @:uproperty public var GraphSource : unreal.niagara.UNiagaraScriptSourceBase;
  #end // WITH_EDITORONLY_DATA
  
  /**
    Whether to limit the max tick delta time or not.
  **/
  @:uproperty public var bLimitDeltaTime : Bool;
  
  /**
    Limits the delta time per tick to prevent simulation spikes due to frame lags.
  **/
  @:uproperty public var MaxDeltaTimePerTick : unreal.Float32;
  
  /**
    Do particles in this emitter require a persistent ID?
  **/
  @:uproperty public var bRequiresPersistentIDs : Bool;
  
  /**
    Whether to use the min detail or not.
  **/
  @:uproperty public var bUseMaxDetailLevel : Bool;
  
  /**
    Whether to use the min detail or not.
  **/
  @:uproperty public var bUseMinDetailLevel : Bool;
  
  /**
    Whether or not fixed bounds are enabled.
  **/
  @:uproperty public var bFixedBounds : Bool;
  
  /**
    When enabled, this will spawn using interpolated parameter values and perform a partial update at spawn time. This adds significant additional cost for spawning but will produce much smoother spawning for high spawn rates, erratic frame rates and fast moving emitters.
  **/
  @:uproperty public var bInterpolatedSpawning : Bool;
  
  /**
    If the current engine detail level is above MaxDetailLevel then this emitter is disabled.
  **/
  @:uproperty public var MaxDetailLevel : unreal.Int32;
  
  /**
    If the current engine detail level is below MinDetailLevel then this emitter is disabled.
  **/
  @:uproperty public var MinDetailLevel : unreal.Int32;
  
  /**
    The fixed bounding box value. bFixedBounds is the condition whether the fixed bounds can be edited.
  **/
  @:uproperty public var FixedBounds : unreal.FBox;
  @:uproperty public var SimTarget : unreal.niagara.ENiagaraSimTarget;
  @:uproperty public var EmitterUpdateScriptProps : unreal.niagara.FNiagaraEmitterScriptProperties;
  @:uproperty public var EmitterSpawnScriptProps : unreal.niagara.FNiagaraEmitterScriptProperties;
  @:uproperty public var SpawnScriptProps : unreal.niagara.FNiagaraEmitterScriptProperties;
  
  /**
    UPROPERTY(EditAnywhere, Category = "Emitter")
    float StartTime;
    UPROPERTY(EditAnywhere, Category = "Emitter")
    float EndTime;
    UPROPERTY(EditAnywhere, Category = "Emitter")
    int32 NumLoops
    UPROPERTY(EditAnywhere, Category = "Emitter")
    ENiagaraCollisionMode CollisionMode;
  **/
  @:uproperty public var UpdateScriptProps : unreal.niagara.FNiagaraEmitterScriptProperties;
  
  /**
    An emitter-based seed for the deterministic random number generator.
  **/
  @:uproperty public var RandomSeed : unreal.Int32;
  
  /**
    Toggles whether to globally make the random number generator be deterministic or non-deterministic. Any random calculation that is set to the emitter defaults will inherit this value. It is still possible to tweak individual random to be deterministic or not. In this case deterministic means that it will return the same results for the same configuration of the emitter as long as delta time is not variable. Any changes to the emitter's individual scripts will adjust the results.
  **/
  @:uproperty public var bDeterminism : Bool;
  
  /**
    Toggles whether or not the particles within this emitter are relative to the emitter origin or in global space.
  **/
  @:uproperty public var bLocalSpace : Bool;
  
}
