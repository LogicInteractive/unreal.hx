/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.niagara;

@:umodule("Niagara")
@:glueCppIncludes("Classes/NiagaraEmitter.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FNiagaraEventScriptProperties extends unreal.niagara.FNiagaraEmitterScriptProperties {
  
  /**
    The minimum spawn number when random spawn is used. Spawn Number is used as the maximum range.
  **/
  @:uproperty public var MinSpawnNumber : unreal.FakeUInt32;
  
  /**
    Whether using a random spawn number.
  **/
  @:uproperty public var bRandomSpawnNumber : Bool;
  
  /**
    The name of the event generated. This will be "Collision" for collision events and the Event Name field on the DataSetWrite node in the module graph for others.
  **/
  @:uproperty public var SourceEventName : unreal.FName;
  
  /**
    Id of the Emitter Handle that generated the event. If all zeroes, the event generator is assumed to be this emitter.
  **/
  @:uproperty public var SourceEmitterID : unreal.FGuid;
  
  /**
    Controls how many events are consumed by this event handler. If there are more events generated than this value, they will be ignored.
  **/
  @:uproperty public var MaxEventsPerFrame : unreal.FakeUInt32;
  
  /**
    Controls whether or not particles are spawned as a result of handling the event. Only valid for EScriptExecutionMode::SpawnedParticles. If Random Spawn Number is used, this will act as the maximum spawn range.
  **/
  @:uproperty public var SpawnNumber : unreal.FakeUInt32;
  
  /**
    Controls which particles have the event script run on them.
  **/
  @:uproperty public var ExecutionMode : unreal.niagara.EScriptExecutionMode;
  
}
