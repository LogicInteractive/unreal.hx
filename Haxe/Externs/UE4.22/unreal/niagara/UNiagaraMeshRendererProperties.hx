/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.niagara;

/**
  WARNING: This type was not defined as DLL export on its declaration. Because of that, some of its methods are inaccessible
  
  
**/
@:umodule("Niagara")
@:glueCppIncludes("NiagaraMeshRendererProperties.h")
@:noClass @:uextern @:uclass extern class UNiagaraMeshRendererProperties extends unreal.niagara.UNiagaraRendererProperties {
  @:uproperty public var SyncId : unreal.Int32;
  
  /**
    Which attribute should we use for Normalized Age?
  **/
  @:uproperty public var NormalizedAgeBinding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use custom sorting of particles in this emitter.
  **/
  @:uproperty public var CustomSortingBinding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use for material randoms when generating instanced meshes?
  **/
  @:uproperty public var MaterialRandomBinding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use for dynamic material parameters when generating instanced meshes?
  **/
  @:uproperty public var DynamicMaterial3Binding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use for dynamic material parameters when generating instanced meshes?
  **/
  @:uproperty public var DynamicMaterial2Binding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use for dynamic material parameters when generating instanced meshes?
  **/
  @:uproperty public var DynamicMaterial1Binding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use for dynamic material parameters when generating instanced meshes?
  **/
  @:uproperty public var DynamicMaterialBinding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use for scale when generating instanced meshes?
  **/
  @:uproperty public var ScaleBinding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use for orienting meshes when generating instanced meshes?
  **/
  @:uproperty public var MeshOrientationBinding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use for velocity when generating instanced meshes?
  **/
  @:uproperty public var VelocityBinding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use for color when generating instanced meshes?
  **/
  @:uproperty public var ColorBinding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Which attribute should we use for position when generating instanced meshes?
  **/
  @:uproperty public var PositionBinding : unreal.niagara.FNiagaraVariableAttributeBinding;
  
  /**
    Determines how the mesh orients itself relative to the camera.
  **/
  @:uproperty public var FacingMode : unreal.niagara.ENiagaraMeshFacingMode;
  
  /**
    The materials to be used instead of the StaticMesh's materials. Note that each material must have the Niagara Mesh Particles flag checked. If the ParticleMesh
          requires more materials than exist in this array or any entry in this array is set to None, we will use the ParticleMesh's existing Material instead.
  **/
  @:uproperty public var OverrideMaterials : unreal.TArray<unreal.UMaterialInterface>;
  
  /**
    If true, the particles are only sorted when using a translucent material.
  **/
  @:uproperty public var bSortOnlyWhenTranslucent : Bool;
  
  /**
    Whether or not to use the OverrideMaterials array instead of the mesh's existing materials.
  **/
  @:uproperty public var bOverrideMaterials : Bool;
  
  /**
    Determines how we sort the particles prior to rendering.
  **/
  @:uproperty public var SortMode : unreal.niagara.ENiagaraSortMode;
  
  /**
    The static mesh to be instanced when rendering mesh particles. If OverrideMaterial is not specified, the mesh's material is used. Note that the material must have the Niagara Mesh Particles flag checked.
  **/
  @:uproperty public var ParticleMesh : unreal.UStaticMesh;
  
}
