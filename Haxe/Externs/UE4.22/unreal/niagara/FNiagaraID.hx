/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.niagara;

@:umodule("Niagara")
@:glueCppIncludes("Public/NiagaraTypes.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FNiagaraID {
  
  /**
    A unique tag for when this ID was acquired.
    Allows us to differentiate between particles when one dies and another reuses it's Index.
  **/
  @:uproperty public var AcquireTag : unreal.Int32;
  
  /**
    Index in the indirection table for this particle. Allows fast access to this particles data.
    Is always unique among currently living particles but will be reused after the particle dies.
  **/
  @:uproperty public var Index : unreal.Int32;
  
}
