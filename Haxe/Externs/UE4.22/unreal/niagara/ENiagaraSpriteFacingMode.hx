/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.niagara;

/**
  This enum decides how a sprite particle will orient its "facing" axis. Must keep these in sync with NiagaraSpriteVertexFactory.ush
**/
@:umodule("Niagara")
@:glueCppIncludes("Public/NiagaraSpriteRendererProperties.h")
@:uname("ENiagaraSpriteFacingMode")
@:class @:uextern @:uenum extern enum ENiagaraSpriteFacingMode {
  
  /**
    The sprite billboard origin is always "looking at" the camera origin, trying to keep its up axis aligned to the camera's up axis.
  **/
  FaceCamera;
  
  /**
    The sprite billboard plane is completely parallel to the camera plane. Particle always looks "flat"
  **/
  FaceCameraPlane;
  
  /**
    The sprite billboard faces toward the "Particles.SpriteFacing" vector attribute, using the per-axis CustomFacingVectorMask as a lerp factor from the standard FaceCamera mode. If the "Particles.SpriteFacing" attribute is missing, this falls back to FaceCamera mode.
  **/
  CustomFacingVector;
  
  /**
    Faces the camera position, but is not dependent on the camera rotation.  This method produces more stable particles under camera rotation. Uses the up axis of (0,0,1).
  **/
  FaceCameraPosition;
  
  /**
    Blends between FaceCamera and FaceCameraPosition.
  **/
  FaceCameraDistanceBlend;
  
}
