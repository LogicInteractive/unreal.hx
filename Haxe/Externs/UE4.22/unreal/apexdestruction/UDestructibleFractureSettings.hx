/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.apexdestruction;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  Information to create an NxDestructibleAsset
**/
@:umodule("ApexDestruction")
@:glueCppIncludes("DestructibleFractureSettings.h")
@:uextern @:uclass extern class UDestructibleFractureSettings extends unreal.UObject {
  
  /**
    Per-chunk authoring parameters, which should be made writable when a chunk selection GUI is in place.
  **/
  @:uproperty public var ChunkParameters : unreal.TArray<unreal.apexdestruction.FDestructibleChunkParameters>;
  
  /**
    APEX references materials by name, but we'll bypass that mechanism and use of UE materials instead.
  **/
  @:uproperty public var Materials : unreal.TArray<unreal.UMaterialInterface>;
  
  /**
    The mesh's original number of submeshes.  APEX needs to store this in the authoring.
  **/
  @:uproperty public var OriginalSubmeshCount : unreal.Int32;
  
  /**
    Stored Voronoi sites
  **/
  @:uproperty public var VoronoiSites : unreal.TArray<unreal.FVector>;
  
  /**
    Random seed for reproducibility
  **/
  @:uproperty public var RandomSeed : unreal.Int32;
  
  /**
    Stored interior material data.  Just need one as we only support Voronoi splitting.
  **/
  @:uproperty public var FractureMaterialDesc : unreal.apexdestruction.FFractureMaterial;
  
  /**
    The number of voronoi cell sites.
  **/
  @:uproperty public var CellSiteCount : unreal.Int32;
  
}
