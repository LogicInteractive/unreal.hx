/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.bodystate;

/**
  WARNING: This type was not defined as DLL export on its declaration. Because of that, some of its methods are inaccessible
  
  
**/
@:umodule("BodyState")
@:glueCppIncludes("BodyStateAnimInstance.h")
@:noClass @:uextern @:uclass extern class UBodyStateAnimInstance extends unreal.UAnimInstance {
  
  /**
    Struct containing all variables needed at anim node time
  **/
  @:uproperty public var MappedBoneList : unreal.TArray<unreal.bodystate.FMappedBoneAnimData>;
  
  /**
    Skeleton driving our data
  **/
  @:uproperty public var BodyStateSkeleton : unreal.bodystate.UBodyStateSkeleton;
  @:uproperty public var DefaultBodyStateIndex : unreal.Int32;
  @:uproperty public var TrackingLimitTags : unreal.TArray<unreal.FString>;
  
  /**
    Strings used to identify left or right hand in your rig. Customize if autorig is failing
  **/
  @:uproperty public var SearchStrings : unreal.bodystate.FSearchStrings;
  
  /**
    This will be automatically determined based on your palm->index traverse distance if value is -1
  **/
  @:uproperty public var BonesPerFinger : unreal.Int32;
  @:uproperty public var AutoMapTarget : unreal.bodystate.EBodyStateAutoRigType;
  
  /**
    Whether the anim instance should autodetect and fill the bonemap on anim init
  **/
  @:uproperty public var bAutoDetectBoneMapAtInit : Bool;
  
}
