/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.bodystate;

@:umodule("BodyState")
@:glueCppIncludes("Public/BodyStateAnimInstance.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FMappedBoneAnimData {
  
  /**
    Skeleton driving mapped data
  **/
  @:uproperty public var BodyStateSkeleton : unreal.bodystate.UBodyStateSkeleton;
  
  /**
    Transform applied after rotation changes to all bones in map. Consider this an offset
  **/
  @:uproperty public var OffsetTransform : unreal.FTransform;
  
  /**
    Offset rotation base applied before given rotation (will rotate input)
  **/
  @:uproperty public var PreBaseRotation : unreal.FRotator;
  
  /**
    List of tags required by the tracking solution for this animation to use that data
  **/
  @:uproperty public var TrackingTagLimit : unreal.TArray<unreal.FString>;
  
  /**
    Whether the mesh should deform to match the tracked data
  **/
  @:uproperty public var bShouldDeformMesh : Bool;
  
}
