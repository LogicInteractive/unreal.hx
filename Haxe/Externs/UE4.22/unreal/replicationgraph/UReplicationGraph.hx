/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.replicationgraph;

/**
  Manages actor replication for an entire world / net driver
**/
@:umodule("ReplicationGraph")
@:glueCppIncludes("ReplicationGraph.h")
@:uextern @:uclass extern class UReplicationGraph extends unreal.UReplicationDriver {
  
  /**
    A list of nodes that want PrepareForReplication() to be called on them at the top of the replication frame.
  **/
  @:uproperty private var PrepareForReplicationNodes : unreal.TArray<unreal.replicationgraph.UReplicationGraphNode>;
  
  /**
    A list of nodes that can add actors to all connections. They don't necessarily *have to* add actors to each connection, but they will get a chance to. These are added via ::AddGlobalGraphNode
  **/
  @:uproperty private var GlobalGraphNodes : unreal.TArray<unreal.replicationgraph.UReplicationGraphNode>;
  
  /**
    ConnectionManagers that we have created but haven't officially been added to the net driver's ClientConnection list. This is a  hack for silly order of initialization issues.
  **/
  @:uproperty public var PendingConnections : unreal.TArray<unreal.replicationgraph.UNetReplicationGraphConnection>;
  
  /**
    List of connection managers. This list is not sorted and not stable.
  **/
  @:uproperty public var Connections : unreal.TArray<unreal.replicationgraph.UNetReplicationGraphConnection>;
  @:uproperty public var NetDriver : unreal.UNetDriver;
  
  /**
    The per-connection manager class to instantiate. This will be read off the instantiated UNetReplicationManager.
  **/
  @:uproperty public var ReplicationConnectionManagerClass : unreal.TSubclassOf<unreal.replicationgraph.UNetReplicationGraphConnection>;
  
}
