/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.virtualcamera;

/**
  Stores relevant information for an axis for the virtual camera pawn
**/
@:umodule("VirtualCamera")
@:glueCppIncludes("Public/VirtualCameraSaveGame.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FVirtualCameraAxisSettings {
  
  /**
    The scale that a user's movement should be adjusted by in game
  **/
  @:uproperty public var MovementScale : unreal.Float32;
  
  /**
    The amount of stabilization that can be applied to an axis
  **/
  @:uproperty public var StabilizationScale : unreal.Float32;
  
  /**
    If an axis is frozen, then that frozen axis's movement will be disabled. When frozen axis is unlocked the movement is not updated, and all of the axis movement is applied as if it was in the location when the freeze was initiated.
  **/
  @:uproperty public var bIsFrozen : Bool;
  
  /**
    If an axis is locked, then that axis's movement will be disabled. When unlocking an axis the movement is updated as if the axis had never been locked.
  **/
  @:uproperty public var bIsLocked : Bool;
  
}
