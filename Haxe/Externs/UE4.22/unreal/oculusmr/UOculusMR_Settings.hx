/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.oculusmr;

/**
  WARNING: This type was not defined as DLL export on its declaration. Because of that, some of its methods are inaccessible
  
  
**/
@:umodule("OculusMR")
@:glueCppIncludes("OculusMR_Settings.h")
@:noClass @:uextern @:uclass extern class UOculusMR_Settings extends unreal.UObject {
  
  /**
    Set the amount of post process effects in the MR view for external composition
  **/
  @:uproperty public var ExternalCompositionPostProcessEffects : unreal.oculusmr.EOculusMR_PostProcessEffects;
  
  /**
    Sets the maximum depth variation across edges (smaller values set smoother edges)
  **/
  @:uproperty public var DynamicLightingDepthVariationClampingValue : unreal.Float32;
  
  /**
    Larger values make dynamic lighting effects smoother, but values that are too large make the lighting look flat.
  **/
  @:uproperty public var DynamicLightingDepthSmoothFactor : unreal.Float32;
  
  /**
    The type of virtual green screen
  **/
  @:uproperty public var VirtualGreenScreenType : unreal.oculusmr.EOculusMR_VirtualGreenScreenType;
  
  /**
    [Green-screen removal] Chroma Key Spill Range. Apply when CompositionMethod is DirectComposition
  **/
  @:uproperty public var ChromaKeySpillRange : unreal.Float32;
  
  /**
    [Green-screen removal] Chroma Key Smooth Range. Apply when CompositionMethod is DirectComposition
  **/
  @:uproperty public var ChromaKeySmoothRange : unreal.Float32;
  
  /**
    [Green-screen removal] Chroma Key Similarity. Apply when CompositionMethod is DirectComposition
  **/
  @:uproperty public var ChromaKeySimilarity : unreal.Float32;
  
  /**
    [Green-screen removal] Chroma Key Color. Apply when CompositionMethod is DirectComposition
  **/
  @:uproperty public var ChromaKeyColor : unreal.FColor;
  
  /**
    When CompositionMethod is Direct Composition, you could adjust this latency to delay the virtual
    hand movement by a small amount of time to match the camera latency
  **/
  @:uproperty public var HandPoseStateLatency : unreal.Float32;
  
  /**
    When CompositionMethod is External Composition, the latency of the casting output which could be adjusted to
    match the camera latency in the external composition application
  **/
  @:uproperty public var CastingLatency : unreal.Float32;
  
  /**
    When bUseTrackedCameraResolution is false, the height of each casting viewport
  **/
  @:uproperty public var HeightPerView : unreal.Int32;
  
  /**
    When bUseTrackedCameraResolution is false, the width of each casting viewport
  **/
  @:uproperty public var WidthPerView : unreal.Int32;
  
  /**
    The casting viewports would use the same resolution of the camera which used in the calibration process.
  **/
  @:uproperty public var bUseTrackedCameraResolution : Bool;
  
  /**
    Specify the distance to the camera which divide the background and foreground in MxR casting.
    Set it to CR_TrackingReference to use the distance to the Tracking Reference, which works better
    in the stationary experience. Set it to CR_Head would use the distance to the HMD, which works better
    in the room scale experience.
  **/
  @:uproperty public var ClippingReference : unreal.oculusmr.EOculusMR_ClippingReference;
  
}
