/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.displayclusterinput;

/**
  Blueprint API interface implementation
**/
@:umodule("DisplayClusterInput")
@:glueCppIncludes("Private/Blueprints/DisplayClusterInputBlueprintAPIImpl.h")
@:uextern @:uclass extern class UDisplayClusterInputBlueprintAPIImpl extends unreal.UObject implements unreal.displayclusterinput.IDisplayClusterInputBlueprintAPI {
  
  /**
    Binds multiple device channels to multiple keys
    
    @return true if success
  **/
  @:ufunction(BlueprintCallable) public function BindVrpnChannels(VrpnDeviceId : unreal.FString, VrpnDeviceBinds : unreal.Const<unreal.PRef<unreal.TArray<unreal.displayclusterinput.FDisplayClusterInputBinding>>>) : Bool;
  
  /**
    Binds specified device channel to a key
    
    @return true if success
  **/
  @:ufunction(BlueprintCallable) public function BindVrpnChannel(VrpnDeviceId : unreal.FString, VrpnChannel : unreal.Int32, Target : unreal.Const<unreal.inputcore.FKey>) : Bool;
  
  /**
    Create new bind from vrpn keyboard device key to UE4 target by user friendly target name
    
    @return True if success
  **/
  @:ufunction(BlueprintCallable) public function BindVrpnKeyboard(VrpnDeviceId : unreal.FString, VrpnKeyboardButtonName : unreal.Const<unreal.inputcore.FKey>, Target : unreal.Const<unreal.inputcore.FKey>) : Bool;
  
  /**
    * Sets VRPN keyboard reflection type
    *
    * @return true if success
  **/
  @:ufunction(BlueprintCallable) public function SetVrpnKeyboardReflectionMode(VrpnDeviceId : unreal.FString, ReflectMode : unreal.displayclusterinput.EDisplayClusterInputKeyboardReflectMode) : Bool;
  
  /**
    Bind VRPN tracker to a hand controller
    
    @return true if success
  **/
  @:ufunction(BlueprintCallable) public function BindVrpnTracker(VrpnDeviceId : unreal.FString, VrpnChannel : unreal.Int32, Target : unreal.inputcore.EControllerHand) : Bool;
  // DisplayClusterInputBlueprintAPI interface implementation
  
}
