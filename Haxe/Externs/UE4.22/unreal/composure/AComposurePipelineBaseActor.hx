/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.composure;

/**
  Actor designed to implement compositing pipeline in a blueprint.
**/
@:umodule("Composure")
@:glueCppIncludes("ComposurePipelineBaseActor.h")
@:uextern @:uclass extern class AComposurePipelineBaseActor extends unreal.AActor {
  #if WITH_EDITORONLY_DATA
  
  /**
    With bAutoRun, this will run EnqueueRendering() in editor - enqueuing render calls along with Editor scene rendering.
  **/
  @:uproperty public var bRunInEditor : Bool;
  #end // WITH_EDITORONLY_DATA
  
  /**
    When set, we'll call EnqueueRendering() each frame automatically. If left
    off, it is up to the user to manually call their composure rendering.
    Toggle this on/off at runtime to enable/disable this pipeline.
  **/
  @:uproperty(BlueprintSetter=SetAutoRun) public var bAutoRun : Bool;
  @:ufunction(BlueprintCallable) public function SetAutoRun(bNewAutoRunVal : Bool) : Void;
  @:ufunction(BlueprintNativeEvent) @:thisConst public function IsActivelyRunning() : Bool;
  
  /**
    Entry point for a composure Blueprint to do its render enqueuing from.
  **/
  @:ufunction(BlueprintNativeEvent) public function EnqueueRendering(bCameraCutThisFrame : Bool) : Void;
  
}
