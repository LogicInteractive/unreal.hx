/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.composure;

@:umodule("Composure")
@:glueCppIncludes("CompositingElements/CompositingElementPasses.h")
@:uextern @:uclass extern class UCompositingElementTransform extends unreal.composure.UCompositingElementPass {
  
  /**
    Marks this pass for 'internal use only' - prevents it from being exposed to parent elements.
    When set, render target resources used by this element will be reused. For transforms, all 'Intermediate'
    passes are available to the next transform pass, and released after that.
  **/
  @:uproperty public var bIntermediate : Bool;
  @:ufunction(BlueprintNativeEvent) private function ApplyTransform(Input : unreal.UTexture, PostProcessProxy : unreal.composure.UComposurePostProcessingPassProxy, TargetCamera : unreal.ACameraActor) : unreal.UTexture;
  @:ufunction(BlueprintCallable) @:final private function FindNamedPrePassResult(PassLookupName : unreal.FName) : unreal.UTexture;
  
}
