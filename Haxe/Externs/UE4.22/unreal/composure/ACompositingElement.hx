/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.composure;

@:umodule("Composure")
@:glueCppIncludes("CompositingElement.h")
@:uextern @:uclass extern class ACompositingElement extends unreal.composure.AComposurePipelineBaseActor implements unreal.composure.ICompImageColorPickerInterface {
  
  /**
    Called when the final output of this element is rendered
  **/
  @:uproperty public var OnFinalPassRendered_BP : unreal.composure.FDynamicOnFinalPassRendered;
  
  /**
    Called when a transform pass on this element is rendered
  **/
  @:uproperty public var OnTransformPassRendered_BP : unreal.composure.FDynamicOnTransformPassRendered;
  #if WITH_EDITORONLY_DATA
  @:uproperty public var DefaultOutputType : unreal.TSubclassOf<unreal.composure.UCompositingElementOutput>;
  @:uproperty public var DefaultTransformType : unreal.TSubclassOf<unreal.composure.UCompositingElementTransform>;
  @:uproperty public var DefaultInputType : unreal.TSubclassOf<unreal.composure.UCompositingElementInput>;
  @:uproperty public var PreviewTransform : unreal.composure.UCompositingElementTransform;
  @:uproperty public var PreviewTransformSource : unreal.composure.EInheritedSourceType;
  #end // WITH_EDITORONLY_DATA
  @:uproperty public var bUseSharedTargetPool : Bool;
  @:uproperty public var RenderFormat : unreal.ETextureRenderTargetFormat;
  @:uproperty(BlueprintGetter=GetRenderResolution) private var RenderResolution : unreal.FIntPoint;
  
  /**
    ***************************** Outputs
  **/
  @:uproperty public var ResolutionSource : unreal.composure.EInheritedSourceType;
  
  /**
    ***************************** Inputs
  **/
  @:uproperty public var CameraSource : unreal.composure.ESceneCameraLinkType;
  @:uproperty(BlueprintGetter=GetOutputsList) private var Outputs : unreal.TArray<unreal.composure.UCompositingElementOutput>;
  @:uproperty(BlueprintGetter=GetTransformsList) private var TransformPasses : unreal.TArray<unreal.composure.UCompositingElementTransform>;
  
  /**
    ***************************** Pipeline Passes
    //   - protected to prevent users from directly modifying these lists (use the accessor functions instead)
  **/
  @:uproperty(BlueprintGetter=GetInputsList) private var Inputs : unreal.TArray<unreal.composure.UCompositingElementInput>;
  @:uproperty public var PostProcessProxy : unreal.composure.UComposurePostProcessingPassProxy;
  @:uproperty public var CompositingTarget : unreal.composure.UComposureCompositingTargetComponent;
  
  /**
    EDITOR ONLY - Specifies which intermediate target to pick colors from (if left unset, we default to the display image)
  **/
  @:ufunction(BlueprintCallable) @:final public function SetEditorColorPickingTarget(PickingTarget : unreal.UTextureRenderTarget2D) : Void;
  
  /**
    EDITOR ONLY - Specifies an intermediate image to display when picking (if left unset, we default to the final output image)
  **/
  @:ufunction(BlueprintCallable) @:final public function SetEditorColorPickerDisplayImage(PickerDisplayImage : unreal.UTexture) : Void;
  @:ufunction(BlueprintNativeEvent) public function RenderCompElement(bCameraCutThisFrame : Bool) : unreal.UTexture;
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetCompElementName() : unreal.FName;
  @:ufunction(BlueprintCallable) @:final public function RequestNamedRenderTarget(ReferenceName : unreal.Const<unreal.FName>, RenderPercentage : unreal.Float32 = 1.000000, @:opt("USAGE_None") UsageTag : unreal.composure.ETargetUsageFlags) : unreal.UTextureRenderTarget2D;
  @:ufunction(BlueprintCallable) @:final public function ReleaseOwnedTarget(OwnedTarget : unreal.UTextureRenderTarget2D) : Bool;
  @:ufunction(BlueprintCallable) @:final public function RenderCompositingMaterial(CompMaterial : unreal.PRef<unreal.composure.FCompositingMaterial>, RenderScale : unreal.Float32 = 1.000000, @:opt("None") ResultLookupName : unreal.FName, @:opt("USAGE_None") UsageTag : unreal.composure.ETargetUsageFlags) : unreal.UTexture;
  @:ufunction(BlueprintCallable) @:final public function RenderCompositingMaterialToTarget(CompMaterial : unreal.PRef<unreal.composure.FCompositingMaterial>, RenderTarget : unreal.UTextureRenderTarget2D, @:opt("None") ResultLookupName : unreal.FName) : unreal.UTextureRenderTarget2D;
  @:ufunction(BlueprintCallable) @:thisConst @:final public function FindTargetCamera() : unreal.ACameraActor;
  @:ufunction(BlueprintCallable) @:final public function RegisterPassResult(ReferenceName : unreal.FName, PassResult : unreal.UTexture, bSetAsLatestRenderResult : Bool = true) : Void;
  @:ufunction(BlueprintCallable) @:final public function FindNamedRenderResult(PassName : unreal.FName, bSearchSubElements : Bool = true) : unreal.UTexture;
  
  /**
    const;
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetLatestRenderResult() : unreal.UTexture;
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetRenderResolution() : unreal.FIntPoint;
  @:ufunction(BlueprintCallable) @:final public function FindOutputPass(OutputType : unreal.TSubclassOf<unreal.composure.UCompositingElementOutput>, @:opt("None") OptionalPassName : unreal.FName) : unreal.composure.UCompositingElementOutput;
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetInputsList() : unreal.TArray<unreal.composure.UCompositingElementInput>;
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetTransformsList() : unreal.TArray<unreal.composure.UCompositingElementTransform>;
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetOutputsList() : unreal.TArray<unreal.composure.UCompositingElementOutput>;
  @:ufunction(BlueprintCallable) @:final private function AddNewInputPass(PassName : unreal.FName, InputType : unreal.TSubclassOf<unreal.composure.UCompositingElementInput>) : unreal.composure.UCompositingElementInput;
  @:ufunction(BlueprintCallable) @:final private function AddNewTransformPass(PassName : unreal.FName, TransformType : unreal.TSubclassOf<unreal.composure.UCompositingElementTransform>) : unreal.composure.UCompositingElementTransform;
  @:ufunction(BlueprintCallable) @:final private function AddNewOutputPass(PassName : unreal.FName, OutputType : unreal.TSubclassOf<unreal.composure.UCompositingElementOutput>) : unreal.composure.UCompositingElementOutput;
  // CompImageColorPickerInterface interface implementation
  
}
