/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.takerecorder;

@:umodule("TakeRecorder")
@:glueCppIncludes("Public/Recorder/TakeRecorderParameters.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FTakeRecorderUserParameters {
  
  /**
    Whether to incrementally serialize and store some data while recording
  **/
  @:uproperty public var bAutoSerialize : Bool;
  
  /**
    Whether to save recorded level sequences and assets when done recording
  **/
  @:uproperty public var bSaveRecordedAssets : Bool;
  
  /**
    Recommended for use with recorded spawnables. Beware that changes to actor instances in the map after recording may alter the recording when played back
  **/
  @:uproperty public var bRemoveRedundantTracks : Bool;
  
  /**
    The engine time dilation to apply during the recording
  **/
  @:uproperty public var EngineTimeDilation : unreal.Float32;
  
  /**
    Delay that we will use before starting recording
  **/
  @:uproperty public var CountdownSeconds : unreal.Float32;
  
  /**
    Whether to maximize the viewport (enter Immersive Mode) when recording
  **/
  @:uproperty public var bMaximizeViewport : Bool;
  
}
