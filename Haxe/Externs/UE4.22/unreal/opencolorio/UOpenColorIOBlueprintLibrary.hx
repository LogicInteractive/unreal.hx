/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.opencolorio;

/**
  WARNING: This type was defined as MinimalAPI on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:umodule("OpenColorIO")
@:glueCppIncludes("OpenColorIOBlueprintLibrary.h")
@:uextern @:uclass extern class UOpenColorIOBlueprintLibrary extends unreal.UBlueprintFunctionLibrary {
  
  /**
    Applies a rendering pass of the color transform described in the settings
    
    @param WorldContextObject World from which to get the actual shader feature level we need to render
    @param ConversionSettings Settings describing the color space transform to apply
    @param InputTexture Texture in the source color space
    @param OutputRenderTarget RenderTarget where to draw the input texture in the destination color space
    @return True if a rendering command to apply the transform was queued.
  **/
  @:ufunction(BlueprintCallable) static public function ApplyColorSpaceTransform(WorldContextObject : unreal.Const<unreal.UObject>, ConversionSettings : unreal.Const<unreal.PRef<unreal.opencolorio.FOpenColorIOColorConversionSettings>>, InputTexture : unreal.UTexture, OutputRenderTarget : unreal.UTextureRenderTarget2D) : Bool;
  
}
