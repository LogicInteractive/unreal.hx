/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.googlearcorebase;

/**
  A UObject that contains a set of observed 3D points and confidence values.
**/
@:umodule("GoogleARCoreBase")
@:glueCppIncludes("GoogleARCoreTypes.h")
@:uextern @:uclass extern class UGoogleARCorePointCloud extends unreal.UObject {
  
  /**
    Checks if this point cloud has been updated in this frame.
  **/
  @:ufunction(BlueprintCallable) @:final public function IsUpdated() : Bool;
  
  /**
    Returns the number of point inside this point cloud.
  **/
  @:ufunction(BlueprintCallable) @:final public function GetPointNum() : unreal.Int32;
  
  /**
    Returns the point position in Unreal world space and it's confidence value from 0 ~ 1.
  **/
  @:ufunction(BlueprintCallable) @:final public function GetPoint(Index : unreal.Int32, OutWorldPosition : unreal.PRef<unreal.FVector>, OutConfidence : unreal.Float32) : Void;
  
  /**
    Returns the point Id of the point at the given index.
    
    Each point has a unique identifier (within a session) that is persistent
    across frames. That is, if a point from point cloud 1 has the same id as the
    point from point cloud 2, then it represents the same point in space.
  **/
  @:ufunction(BlueprintCallable) @:final public function GetPointId(Index : unreal.Int32) : unreal.Int32;
  
  /**
    Returns the point position in Unreal AR Tracking space.
  **/
  @:ufunction(BlueprintCallable) @:final public function GetPointInTrackingSpace(Index : unreal.Int32, OutTrackingSpaceLocation : unreal.PRef<unreal.FVector>, OutConfidence : unreal.Float32) : Void;
  
  /**
    Release PointCloud's resources back to ArCore. Data will not be available after releasePointCloud is called.
  **/
  @:ufunction(BlueprintCallable) @:final public function ReleasePointCloud() : Void;
  
}
