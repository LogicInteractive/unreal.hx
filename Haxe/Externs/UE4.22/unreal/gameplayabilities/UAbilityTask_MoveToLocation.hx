/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplayabilities;

/**
  Move to a location, ignoring clipping, over a given length of time. Ends when the TargetLocation is reached.
  This will RESET your character's current movement mode! If you wish to maintain PHYS_Flying or PHYS_Custom, you must
  reset it on completion.!
**/
@:umodule("GameplayAbilities")
@:glueCppIncludes("Abilities/Tasks/AbilityTask_MoveToLocation.h")
@:uextern @:uclass extern class UAbilityTask_MoveToLocation extends unreal.gameplayabilities.UAbilityTask {
  @:uproperty private var LerpCurveVector : unreal.UCurveVector;
  @:uproperty private var LerpCurve : unreal.UCurveFloat;
  @:uproperty private var DurationOfMovement : unreal.Float32;
  
  /**
    FVector
  **/
  @:uproperty private var TargetLocation : unreal.FVector;
  @:uproperty private var StartLocation : unreal.FVector;
  @:uproperty public var OnTargetLocationReached : unreal.gameplayabilities.FMoveToLocationDelegate;
  
  /**
    Move to the specified location, using the vector curve (range 0 - 1) if specified, otherwise the float curve (range 0 - 1) or fallback to linear interpolation
  **/
  @:ufunction(BlueprintCallable) static public function MoveToLocation(OwningAbility : unreal.gameplayabilities.UGameplayAbility, TaskInstanceName : unreal.FName, Location : unreal.FVector, Duration : unreal.Float32, OptionalInterpolationCurve : unreal.UCurveFloat, OptionalVectorInterpolationCurve : unreal.UCurveVector) : unreal.gameplayabilities.UAbilityTask_MoveToLocation;
  
}
