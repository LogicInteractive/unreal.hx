/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplayabilities;

/**
  Waits for the actor to activate another ability
**/
@:umodule("GameplayAbilities")
@:glueCppIncludes("Abilities/Tasks/AbilityTask_WaitAttributeChange.h")
@:uextern @:uclass extern class UAbilityTask_WaitAttributeChange extends unreal.gameplayabilities.UAbilityTask {
  @:uproperty private var ExternalOwner : unreal.gameplayabilities.UAbilitySystemComponent;
  @:uproperty public var OnChange : unreal.gameplayabilities.FWaitAttributeChangeDelegate;
  
  /**
    Wait until an attribute changes.
  **/
  @:ufunction(BlueprintCallable) static public function WaitForAttributeChange(OwningAbility : unreal.gameplayabilities.UGameplayAbility, Attribute : unreal.gameplayabilities.FGameplayAttribute, WithSrcTag : unreal.gameplaytags.FGameplayTag, WithoutSrcTag : unreal.gameplaytags.FGameplayTag, TriggerOnce : Bool = true, @:opt("None") OptionalExternalOwner : unreal.AActor) : unreal.gameplayabilities.UAbilityTask_WaitAttributeChange;
  
  /**
    Wait until an attribute changes to pass a given test.
  **/
  @:ufunction(BlueprintCallable) static public function WaitForAttributeChangeWithComparison(OwningAbility : unreal.gameplayabilities.UGameplayAbility, InAttribute : unreal.gameplayabilities.FGameplayAttribute, InWithTag : unreal.gameplaytags.FGameplayTag, InWithoutTag : unreal.gameplaytags.FGameplayTag, InComparisonType : unreal.gameplayabilities.EWaitAttributeChangeComparison, InComparisonValue : unreal.Float32, TriggerOnce : Bool = true, @:opt("None") OptionalExternalOwner : unreal.AActor) : unreal.gameplayabilities.UAbilityTask_WaitAttributeChange;
  
}
