/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplayabilities;

/**
  How does an ability execute on the network. Does a client "ask and predict", "ask and wait", "don't ask (just do it)"
**/
@:umodule("GameplayAbilities")
@:glueCppIncludes("Public/Abilities/GameplayAbilityTypes.h")
@:uname("EGameplayAbilityNetExecutionPolicy.Type")
@:uextern @:uenum extern enum EGameplayAbilityNetExecutionPolicy {
  
  /**
    Part of this ability runs predictively on the local client if there is one
    @DisplayName Local Predicted
  **/
  @DisplayName("Local Predicted")
  LocalPredicted;
  
  /**
    This ability will only run on the client or server that has local control
    @DisplayName Local Only
  **/
  @DisplayName("Local Only")
  LocalOnly;
  
  /**
    This ability is initiated by the server, but will also run on the local client if one exists
    @DisplayName Server Initiated
  **/
  @DisplayName("Server Initiated")
  ServerInitiated;
  
  /**
    This ability will only run on the server
    @DisplayName Server Only
  **/
  @DisplayName("Server Only")
  ServerOnly;
  
}
