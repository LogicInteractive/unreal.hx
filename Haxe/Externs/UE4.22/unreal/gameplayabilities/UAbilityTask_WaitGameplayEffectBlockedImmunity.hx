/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplayabilities;

@:umodule("GameplayAbilities")
@:glueCppIncludes("Abilities/Tasks/AbilityTask_WaitGameplayEffectBlockedImmunity.h")
@:uextern @:uclass extern class UAbilityTask_WaitGameplayEffectBlockedImmunity extends unreal.gameplayabilities.UAbilityTask {
  @:uproperty private var ExternalOwner : unreal.gameplayabilities.UAbilitySystemComponent;
  @:uproperty public var Blocked : unreal.gameplayabilities.FGameplayEffectBlockedDelegate;
  
  /**
    Listens for GE immunity. By default this means "this hero blocked a GE due to immunity". Setting OptionalExternalTarget will listen for a GE being blocked on an external target. Note this only works on the server.
  **/
  @:ufunction(BlueprintCallable) static public function WaitGameplayEffectBlockedByImmunity(OwningAbility : unreal.gameplayabilities.UGameplayAbility, SourceTagRequirements : unreal.gameplayabilities.FGameplayTagRequirements, TargetTagRequirements : unreal.gameplayabilities.FGameplayTagRequirements, @:opt("None") OptionalExternalTarget : unreal.AActor, OnlyTriggerOnce : Bool = false) : unreal.gameplayabilities.UAbilityTask_WaitGameplayEffectBlockedImmunity;
  
}
