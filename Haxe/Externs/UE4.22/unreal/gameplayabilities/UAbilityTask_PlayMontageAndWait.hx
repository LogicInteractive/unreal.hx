/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplayabilities;

/**
  Ability task to simply play a montage. Many games will want to make a modified version of this task that looks for game-specific events
**/
@:umodule("GameplayAbilities")
@:glueCppIncludes("Abilities/Tasks/AbilityTask_PlayMontageAndWait.h")
@:uextern @:uclass extern class UAbilityTask_PlayMontageAndWait extends unreal.gameplayabilities.UAbilityTask {
  @:uproperty public var OnCancelled : unreal.gameplayabilities.FMontageWaitSimpleDelegate;
  @:uproperty public var OnInterrupted : unreal.gameplayabilities.FMontageWaitSimpleDelegate;
  @:uproperty public var OnBlendOut : unreal.gameplayabilities.FMontageWaitSimpleDelegate;
  @:uproperty public var OnCompleted : unreal.gameplayabilities.FMontageWaitSimpleDelegate;
  @:ufunction @:final public function OnMontageBlendingOut(Montage : unreal.UAnimMontage, bInterrupted : Bool) : Void;
  @:ufunction @:final public function OnMontageInterrupted() : Void;
  @:ufunction @:final public function OnMontageEnded(Montage : unreal.UAnimMontage, bInterrupted : Bool) : Void;
  @:ufunction(BlueprintCallable) static public function CreatePlayMontageAndWaitProxy(OwningAbility : unreal.gameplayabilities.UGameplayAbility, TaskInstanceName : unreal.FName, MontageToPlay : unreal.UAnimMontage, Rate : unreal.Float32 = 1.000000, @:opt("None") StartSection : unreal.FName, bStopWhenAbilityEnds : Bool = true, AnimRootMotionTranslationScale : unreal.Float32 = 1.000000) : unreal.gameplayabilities.UAbilityTask_PlayMontageAndWait;
  
}
