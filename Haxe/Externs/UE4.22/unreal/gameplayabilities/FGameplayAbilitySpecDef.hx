/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplayabilities;

/**
  This is data that can be used to create an FGameplayAbilitySpec. Has some data that is only relevant when granted by a GameplayEffect
**/
@:umodule("GameplayAbilities")
@:glueCppIncludes("Public/GameplayAbilitySpec.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FGameplayAbilitySpecDef {
  
  /**
    This handle can be set if the SpecDef is used to create a real FGameplaybilitySpec
  **/
  @:uproperty public var AssignedHandle : unreal.gameplayabilities.FGameplayAbilitySpecHandle;
  
  /**
    What granted this spec, not replicated or settable in editor
  **/
  @:uproperty public var SourceObject : unreal.UObject;
  
  /**
    What will remove this ability later
  **/
  @:uproperty public var RemovalPolicy : unreal.gameplayabilities.EGameplayEffectGrantedAbilityRemovePolicy;
  
  /**
    Input ID to bind this ability to
  **/
  @:uproperty public var InputID : unreal.Int32;
  
  /**
    What level to grant this ability at
  **/
  @:uproperty public var LevelScalableFloat : unreal.gameplayabilities.FScalableFloat;
  
  /**
    What ability to grant
  **/
  @:uproperty public var Ability : unreal.TSubclassOf<unreal.gameplayabilities.UGameplayAbility>;
  
}
