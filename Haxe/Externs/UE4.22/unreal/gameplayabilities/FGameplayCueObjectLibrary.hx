/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.gameplayabilities;

/**
  An ObjectLibrary for the GameplayCue Notifies. Wraps 2 underlying UObjectLibraries plus options/delegates for how they are loaded
**/
@:umodule("GameplayAbilities")
@:glueCppIncludes("Public/GameplayCueManager.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FGameplayCueObjectLibrary {
  
  /**
    True if this has been initialized with correct data
  **/
  @:uproperty public var bHasBeenInitialized : Bool;
  
  /**
    Should we sync load everything that we find (that passes ShouldLoad delegate check)
  **/
  @:uproperty public var bShouldSyncLoad : Bool;
  
  /**
    Should we start async loading everything that we find (that passes ShouldLoad delegate check)
  **/
  @:uproperty public var bShouldAsyncLoad : Bool;
  
  /**
    Should we force a sync scan on the asset registry in order to discover asset data, or just use what is there
  **/
  @:uproperty public var bShouldSyncScan : Bool;
  
  /**
    Set to put the loaded asset data into. If null we will use the global set (RuntimeGameplayCueObjectLibrary.CueSet)
  **/
  @:uproperty public var CueSet : unreal.gameplayabilities.UGameplayCueSet;
  
  /**
    Object library for object based notifies
  **/
  @:uproperty public var StaticObjectLibrary : unreal.UObjectLibrary;
  
  /**
    Object library for actor based notifies
  **/
  @:uproperty public var ActorObjectLibrary : unreal.UObjectLibrary;
  
  /**
    Paths to search for
  **/
  @:uproperty public var Paths : unreal.TArray<unreal.FString>;
  
}
