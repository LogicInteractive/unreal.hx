/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.editorscriptingutilities;

/**
  Utility class to altering and analyzing a SkeletalMesh and use the common functionalities of the SkeletalMesh Editor.
  The editor should not be in play in editor mode.
**/
@:umodule("EditorScriptingUtilities")
@:glueCppIncludes("EditorSkeletalMeshLibrary.h")
@:uextern @:uclass extern class UEditorSkeletalMeshLibrary extends unreal.UBlueprintFunctionLibrary {
  
  /**
    Regenerate LODs of the mesh
    
    @param SkeletalMesh  The mesh that will regenerate LOD
    @param NewLODCount   Set valid value (>0) if you want to change LOD count.
                                                Otherwise, it will use the current LOD and regenerate
    @param bRegenerateEvenIfImported     If this is true, it only regenerate even if this LOD was imported before
                                                                        If false, it will regenerate for only previously auto generated ones
    @param bGenerateBaseLOD If this is true and there is some reduction data, the base LOD will be reduce according to the settings
    @return      true if succeed. If mesh reduction is not available this will return false.
  **/
  @:ufunction(BlueprintCallable) static public function RegenerateLOD(SkeletalMesh : unreal.USkeletalMesh, NewLODCount : unreal.Int32 = 0, bRegenerateEvenIfImported : Bool = false, bGenerateBaseLOD : Bool = false) : Bool;
  
  /**
    Get number of mesh vertices for an LOD of a Skeletal Mesh
    
    @param SkeletalMesh          Mesh to get number of vertices from.
    @param LODIndex                      Index of the mesh LOD.
    @return Number of vertices. Returns 0 if invalid mesh or LOD index.
  **/
  @:ufunction(BlueprintCallable) static public function GetNumVerts(SkeletalMesh : unreal.USkeletalMesh, LODIndex : unreal.Int32) : unreal.Int32;
  
}
