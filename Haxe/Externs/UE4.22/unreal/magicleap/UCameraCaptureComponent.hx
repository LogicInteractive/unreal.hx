/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.magicleap;

/**
  The CameraCaptureComponent provides access to and maintains state for camera capture functionality.
  The connection to the device's camera is managed internally.  Users of this component
  are able to asynchronously capture camera images and footage to file.  Alternatively,
  a camera image can be captured directly to texture.  The user need only make the relevant
  asynchronous call and then register the appropriate success/fail event handlers for the
  operation's completion.
**/
@:umodule("MagicLeap")
@:glueCppIncludes("CameraCaptureComponent.h")
@:uextern @:uclass extern class UCameraCaptureComponent extends unreal.UActorComponent {
  
  /**
    Initiates a capture image to file task on a separate thread.
    @brief The newly created jpeg file will have an automatically generated name which is guaranteed
               to be unique.  Upon completion, a successful operation will provide the file path of the newly
               created jpeg to the FCameraCaptureImgToFile event handler.
    @param ResultDelegate The delegate to be notified once the camera image has been saved to a jpeg file.
  **/
  @:ufunction(BlueprintCallable) @:final public function CaptureImageToFileAsync(ResultDelegate : unreal.Const<unreal.PRef<unreal.magicleap.FCameraCaptureImgToFile>>) : Bool;
  
  /**
    Initiates a capture image to memory task on a speparate thread.
       @brief The user should register event handlers for both the success and fail events.  Upon completion,
                  a successful operation will provide a dynamically generated texture containing the captured
                  image to the FCameraCaptureImgToTextureSuccess event handler.
    @note The generated texture will be garbage collected when this app is destroyed.
       @param ResultDelegate The delegate to be notified once the camera image has been saved to a texture.
  **/
  @:ufunction(BlueprintCallable) @:final public function CaptureImageToTextureAsync(ResultDelegate : unreal.Const<unreal.PRef<unreal.magicleap.FCameraCaptureImgToTexture>>) : Bool;
  
  /**
    Initiates the capturing of video/audio data on a separate thread.
       @note The system will continue to record video until StopRecordingVideo is called.
       @param ResultDelegate The delegate to be notified once the recording has begun or failed to begin.
  **/
  @:ufunction(BlueprintCallable) @:final public function StartRecordingVideoAsync(ResultDelegate : unreal.Const<unreal.PRef<unreal.magicleap.FCameraCaptureStartRecording>>) : Bool;
  
  /**
    Stops the recording and saves the video/audio data to an mp4 file.
    @note The newly created mp4 file will have an automatically generated name which is guaranteed
              to be unique.
    @param ResultDelegate The delegate to be notified once the video/audio data has been saved to an mp4 file.
  **/
  @:ufunction(BlueprintCallable) @:final public function StopRecordingVideoAsync(ResultDelegate : unreal.Const<unreal.PRef<unreal.magicleap.FCameraCaptureStopRecording>>) : Bool;
  
  /**
    Gets the capture state of the component.
    @return True if the component is currently capturing, false otherwise.
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function IsCapturing() : Bool;
  
}
