/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.renderdocplugin;

@:umodule("RenderDocPlugin")
@:glueCppIncludes("RenderDocPluginSettings.h")
@:uextern @:uclass extern class URenderDocPluginSettings extends unreal.UDeveloperSettings {
  
  /**
    Path to the main RenderDoc executable to use.
  **/
  @:uproperty public var RenderDocBinaryPath : unreal.FString;
  
  /**
    If checked, the RenderDoc crash handler will be used if a crash occurs (Only use this if you know the problem is with RenderDoc and you want to notify the RenderDoc developers!).
  **/
  @:uproperty public var bEnableRenderDocCrashHandler : Bool;
  
  /**
    If checked, a help window will be shown on startup.
  **/
  @:uproperty public var bShowHelpOnStartup : Bool;
  
  /**
    If checked, RenderDoc will always capture the initial state of all rendering resources even if they are not likely to be used during the frame. Please note that doing this will significantly increase capture size.
  **/
  @:uproperty public var bSaveAllInitials : Bool;
  
  /**
    If checked, RenderDoc will include all rendering resources in the capture, even those that have not been used during the frame. Please note that doing this will significantly increase capture size.
  **/
  @:uproperty public var bReferenceAllResources : Bool;
  
  /**
    If checked, RenderDoc will capture callstacks for all API calls.
  **/
  @:uproperty public var bCaptureAllCallstacks : Bool;
  
  /**
    If checked, RenderDoc will capture all activity in all viewports and editor windows for the entire frame instead of only the current viewport.
  **/
  @:uproperty public var bCaptureAllActivity : Bool;
  
}
