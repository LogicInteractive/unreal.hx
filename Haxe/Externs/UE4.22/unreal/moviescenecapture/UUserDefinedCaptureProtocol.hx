/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.moviescenecapture;

/**
  A blueprintable capture protocol that defines how to capture frames from the engine
**/
@:umodule("MovieSceneCapture")
@:glueCppIncludes("Protocols/UserDefinedCaptureProtocol.h")
@:uextern @:uclass extern class UUserDefinedCaptureProtocol extends unreal.moviescenecapture.UMovieSceneImageCaptureProtocolBase {
  
  /**
    Called before the capture process itself is ticked, before each frame is set up for capture
    Useful for any pre-frame set up or resetting the previous frame's state
  **/
  @:ufunction(BlueprintImplementableEvent) private function OnPreTick() : Void;
  
  /**
    Called after the capture process itself is ticked, after the frame is set up for capture, but before most actors have ticked
  **/
  @:ufunction(BlueprintImplementableEvent) private function OnTick() : Void;
  
  /**
    Called once at the start of the capture process, but before any warmup frames
    @return true if this protocol set up successfully, false otherwise
  **/
  @:ufunction(BlueprintNativeEvent) private function OnSetup() : Bool;
  
  /**
    Called when the capture process is warming up. Protocols may transition from either an initialized, or capturing state to warm-up
  **/
  @:ufunction(BlueprintImplementableEvent) private function OnWarmUp() : Void;
  
  /**
    Called when this protocol should start capturing frames
  **/
  @:ufunction(BlueprintImplementableEvent) private function OnStartCapture() : Void;
  
  /**
    Called when this protocol should capture the current frame
  **/
  @:ufunction(BlueprintImplementableEvent) private function OnCaptureFrame() : Void;
  
  /**
    Called when this protocol should temporarily stop capturing frames
  **/
  @:ufunction(BlueprintImplementableEvent) private function OnPauseCapture() : Void;
  
  /**
    Called when this protocol is going to be shut down - should not capture any more frames
  **/
  @:ufunction(BlueprintImplementableEvent) private function OnBeginFinalize() : Void;
  
  /**
    Called to check whether this protocol has finished any pending tasks, and can now be shut down
  **/
  @:ufunction(BlueprintNativeEvent) @:thisConst private function OnCanFinalize() : Bool;
  
  /**
    Called to complete finalization of this protocol
  **/
  @:ufunction(BlueprintImplementableEvent) private function OnFinalize() : Void;
  
  /**
    Called when pixels have been received for the specified stream name
  **/
  @:ufunction(BlueprintImplementableEvent) private function OnPixelsReceived(Pixels : unreal.Const<unreal.PRef<unreal.moviescenecapture.FCapturedPixels>>, ID : unreal.Const<unreal.PRef<unreal.moviescenecapture.FCapturedPixelsID>>, FrameMetrics : unreal.moviescenecapture.FFrameMetrics) : Void;
  
  /**
    * Resolve the specified buffer and pass it directly to the specified handler when done (does not pass to any bound streams)
    *
    * @param Buffer          The desired buffer to save
    * @param BufferID        The ID of this buffer that is passed to the pixel handler (e.g. a composition pass name).
  **/
  @:ufunction(BlueprintCallable) @:final public function ResolveBuffer(Buffer : unreal.UTexture, BufferID : unreal.Const<unreal.PRef<unreal.moviescenecapture.FCapturedPixelsID>>) : Void;
  
  /**
    Instruct this protocol to start capturing LDR final pixels (including slate widgets and burn-ins)
    
    @param StreamID        The identifier to use for the final pixels buffer
  **/
  @:ufunction(BlueprintCallable) @:final public function StartCapturingFinalPixels(StreamID : unreal.Const<unreal.PRef<unreal.moviescenecapture.FCapturedPixelsID>>) : Void;
  
  /**
    Instruct this protocol to stop capturing LDR final pixels
  **/
  @:ufunction(BlueprintCallable) @:final public function StopCapturingFinalPixels() : Void;
  
  /**
    Generate a filename for the current frame
  **/
  @:ufunction(BlueprintCallable) @:thisConst public function GenerateFilename(InFrameMetrics : unreal.Const<unreal.PRef<unreal.moviescenecapture.FFrameMetrics>>) : unreal.FString;
  
  /**
    Access this protocol's current frame metrics
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function GetCurrentFrameMetrics() : unreal.moviescenecapture.FFrameMetrics;
  
  /**
    World pointer assigned on Setup
  **/
  @:uproperty private var World : unreal.UWorld;
  
}
