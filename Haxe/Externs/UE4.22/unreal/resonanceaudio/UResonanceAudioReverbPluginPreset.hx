/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.resonanceaudio;

@:umodule("ResonanceAudio")
@:glueCppIncludes("Private/ResonanceAudioReverb.h")
@:uextern @:uclass extern class UResonanceAudioReverbPluginPreset extends unreal.USoundEffectSubmixPreset {
  @:uproperty public var Settings : unreal.resonanceaudio.FResonanceAudioReverbPluginSettings;
  
  /**
    Enables/disables Resonance Audio room effects
  **/
  @:ufunction(BlueprintCallable) @:final public function SetEnableRoomEffects(bInEnableRoomEffects : Bool) : Void;
  
  /**
    Sets room position in 3D space
  **/
  @:ufunction(BlueprintCallable) @:final public function SetRoomPosition(InPosition : unreal.Const<unreal.PRef<unreal.FVector>>) : Void;
  
  /**
    Sets room rotation in 3D space
  **/
  @:ufunction(BlueprintCallable) @:final public function SetRoomRotation(InRotation : unreal.Const<unreal.PRef<unreal.FQuat>>) : Void;
  
  /**
    Sets room dimensions in 3D space
  **/
  @:ufunction(BlueprintCallable) @:final public function SetRoomDimensions(InDimensions : unreal.Const<unreal.PRef<unreal.FVector>>) : Void;
  
  /**
    Sets Resonance Audio room's acoustic materials
  **/
  @:ufunction(BlueprintCallable) @:final public function SetRoomMaterials(InMaterials : unreal.Const<unreal.PRef<unreal.TArray<unreal.resonanceaudio.ERaMaterialName>>>) : Void;
  
  /**
    Sets early reflections gain multiplier
  **/
  @:ufunction(BlueprintCallable) @:final public function SetReflectionScalar(InReflectionScalar : unreal.Float32) : Void;
  
  /**
    Sets reverb gain multiplier
  **/
  @:ufunction(BlueprintCallable) @:final public function SetReverbGain(InReverbGain : unreal.Float32) : Void;
  
  /**
    Adjusts the reverberation time across all frequency bands by multiplying the computed values by this factor.
    Has no effect when set to 1.0
  **/
  @:ufunction(BlueprintCallable) @:final public function SetReverbTimeModifier(InReverbTimeModifier : unreal.Float32) : Void;
  
  /**
    Increases high frequency reverberation times when positive, decreases when negative.
    Has no effect when set to 0.0
  **/
  @:ufunction(BlueprintCallable) @:final public function SetReverbBrightness(InReverbBrightness : unreal.Float32) : Void;
  
}
