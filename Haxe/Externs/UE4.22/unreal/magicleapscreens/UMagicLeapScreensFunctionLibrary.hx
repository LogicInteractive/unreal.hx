/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.magicleapscreens;

@:umodule("MagicLeapScreens")
@:glueCppIncludes("MagicLeapScreensFunctionLibrary.h")
@:uextern @:uclass extern class UMagicLeapScreensFunctionLibrary extends unreal.UBlueprintFunctionLibrary {
  
  /**
    Asynchronously requests all watch history entries.
    
    @param[in] ResultDelegate Delegate that is called once the request has been resolved.
  **/
  @:ufunction(BlueprintCallable) static public function GetWatchHistoryAsync(ResultDelegate : unreal.Const<unreal.PRef<unreal.magicleapscreens.FScreensHistoryRequestResultDelegate>>) : Void;
  
  /**
    Asynchronously requests to adds a new entry into the watch history.
    
    @param[in] NewEntry Watch history entry to add.
    @param[in] ResultDelegate Delegate that is called once the add request has been resolved. The resulting FScreensWatchHistoryEntry returned.
    on success contains the new ID of the added entry.
  **/
  @:ufunction(BlueprintCallable) static public function AddToWatchHistoryAsync(NewEntry : unreal.Const<unreal.PRef<unreal.magicleapscreens.FScreensWatchHistoryEntry>>, ResultDelegate : unreal.Const<unreal.PRef<unreal.magicleapscreens.FScreensEntryRequestResultDelegate>>) : Void;
  
  /**
    Asynchronously requests to update an entry in the watch history
    
    @param[in] UpdateEntry Watch history entry to update. The ID of this entry must be valid and in the watch history in order for the update to resolve successfully
    @param[in] ResultDelegate Delegate that is called once the update request has been resolved.
  **/
  @:ufunction(BlueprintCallable) static public function UpdateWatchHistoryEntryAsync(UpdateEntry : unreal.Const<unreal.PRef<unreal.magicleapscreens.FScreensWatchHistoryEntry>>, ResultDelegate : unreal.Const<unreal.PRef<unreal.magicleapscreens.FScreensEntryRequestResultDelegate>>) : Void;
  
  /**
    Removes an entry from the watch history that corresponse with the ID passed.
    
    @param[in] ID ID of the watch history entry to remove.
    @return True when the entry is sucessfully removed.
  **/
  @:ufunction(BlueprintCallable) static public function RemoveWatchHistoryEntry(ID : unreal.Const<unreal.PRef<unreal.magicleapscreens.FScreenID>>) : Bool;
  
  /**
    Removes all watch history entries.
    
    @return True when all watch history entries have been successfully removed.
  **/
  @:ufunction(BlueprintCallable) static public function ClearWatchHistory() : Bool;
  
  /**
    Gets the transform for all watch history entries.
    
    @param[out] ScreenTransforms Array of transforms that corresponse to all current watch history entries.
    @return True when the request for all transforms succeeds
  **/
  @:ufunction(BlueprintCallable) static public function GetScreensTransforms(ScreenTransforms : unreal.PRef<unreal.TArray<unreal.magicleapscreens.FScreenTransform>>) : Bool;
  
  /**
    Delegate used to relay the results of both AddToWatchHistory and UpdateWatchHistoryEntry.
  **/
  @:uproperty public var EntryResultDelegate : unreal.magicleapscreens.FScreensEntryRequestResultDelegate;
  
  /**
    Delegate used to relay the results of GetWatchHistory.
  **/
  @:uproperty public var HistoryResultDelegate : unreal.magicleapscreens.FScreensHistoryRequestResultDelegate;
  
}
