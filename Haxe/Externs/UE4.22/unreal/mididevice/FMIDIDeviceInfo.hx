/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.mididevice;

@:umodule("MIDIDevice")
@:glueCppIncludes("Public/MIDIDeviceManager.h")
@:uextern @:ustruct extern class FMIDIDeviceInfo {
  
  /**
    True if this is the default MIDI device for input on this system
  **/
  @:uproperty public var bIsDefaultDevice : Bool;
  
  /**
    Whether the device is already in use.  You might not want to create a controller for devices that are busy.  Someone else could be using it.
  **/
  @:uproperty public var bIsAlreadyInUse : Bool;
  
  /**
    The name of this device.  This name comes from the MIDI hardware, any might not be unique
  **/
  @:uproperty public var DeviceName : unreal.FString;
  
  /**
    The unique ID of this MIDI device
  **/
  @:uproperty public var DeviceID : unreal.Int32;
  
}
