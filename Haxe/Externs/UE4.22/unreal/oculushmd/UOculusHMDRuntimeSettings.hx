/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.oculushmd;

/**
  Implements the settings for the OculusVR plugin.
**/
@:umodule("OculusHMD")
@:glueCppIncludes("OculusHMDRuntimeSettings.h")
@:uextern @:uclass extern class UOculusHMDRuntimeSettings extends unreal.UObject {
  
  /**
    Recenters the HMD too when the controller recenter button is pressed on Go and GearVR
  **/
  @:uproperty public var bRecenterHMDWithController : Bool;
  
  /**
    Compensates in the compositor for chromatic aberration, at a higher GPU cost but without the color fringes on the sides of the lenses
  **/
  @:uproperty public var bChromaCorrection : Bool;
  
  /**
    Default Fixed Foveated Rendering level for Oculus Go!
  **/
  @:uproperty public var FFRLevel : unreal.oculushmd.ETiledMultiResLevel;
  
  /**
    Default GPU level controlling GPU frequency on the mobile device
  **/
  @:uproperty public var GPULevel : unreal.Int32;
  
  /**
    Default CPU level controlling CPU frequency on the mobile device
  **/
  @:uproperty public var CPULevel : unreal.Int32;
  
  /**
    Maximum allowed pixel density.
  **/
  @:uproperty public var PixelDensityMax : unreal.Float32;
  
  /**
    Minimum allowed pixel density.
  **/
  @:uproperty public var PixelDensityMin : unreal.Float32;
  
  /**
    Computes mipmaps for the eye buffers every frame, for a higher quality distortion
  **/
  @:uproperty public var bHQDistortion : Bool;
  
  /**
    Whether the app's depth buffer is shared with the Rift Compositor, for layer (including Dash) compositing, PTW, and potentially more.
  **/
  @:uproperty public var bCompositesDepth : Bool;
  
  /**
    Whether Dash is supported by the app, which will keep the app in foreground when the User presses the oculus button (needs the app to handle input focus loss!)
  **/
  @:uproperty public var bSupportsDash : Bool;
  
  /**
    An array of splash screen descriptors listing textures to show and their positions.
  **/
  @:uproperty public var SplashDescs : unreal.TArray<unreal.oculushmd.FOculusSplashDesc>;
  
  /**
    Whether the Splash screen is enabled.
  **/
  @:uproperty public var bAutoEnabled : Bool;
  
}
