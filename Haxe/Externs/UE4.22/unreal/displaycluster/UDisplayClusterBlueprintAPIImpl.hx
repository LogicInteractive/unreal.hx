/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.displaycluster;

/**
  Blueprint API interface implementation
**/
@:umodule("DisplayCluster")
@:glueCppIncludes("Private/Blueprints/DisplayClusterBlueprintAPIImpl.h")
@:uextern @:uclass extern class UDisplayClusterBlueprintAPIImpl extends unreal.UObject implements unreal.displaycluster.IDisplayClusterBlueprintAPI {
  
  /**
    Return if the module has been initialized.
  **/
  @:ufunction(BlueprintCallable) public function IsModuleInitialized() : Bool;
  
  /**
    Return current operation mode.
  **/
  @:ufunction(BlueprintCallable) public function GetOperationMode() : unreal.displaycluster.EDisplayClusterOperationMode;
  
  /**
    /
     Cluster API
    /
  **/
  @:ufunction(BlueprintCallable) public function IsMaster() : Bool;
  @:ufunction(BlueprintCallable) public function IsSlave() : Bool;
  @:ufunction(BlueprintCallable) public function IsCluster() : Bool;
  @:ufunction(BlueprintCallable) public function IsStandalone() : Bool;
  @:ufunction(BlueprintCallable) public function GetNodeId() : unreal.FString;
  @:ufunction(BlueprintCallable) public function GetNodesAmount() : unreal.Int32;
  @:ufunction(BlueprintCallable) public function EmitClusterEvent(Event : unreal.Const<unreal.PRef<unreal.displaycluster.FDisplayClusterClusterEvent>>, MasterOnly : Bool) : Void;
  
  /**
    /
     Game API
    /
     Root
  **/
  @:ufunction(BlueprintCallable) public function GetRoot() : unreal.displaycluster.ADisplayClusterPawn;
  
  /**
    Screens
  **/
  @:ufunction(BlueprintCallable) public function GetActiveScreens() : unreal.TArray<unreal.displaycluster.UDisplayClusterScreenComponent>;
  @:ufunction(BlueprintCallable) public function GetScreenById(id : unreal.FString) : unreal.displaycluster.UDisplayClusterScreenComponent;
  @:ufunction(BlueprintCallable) public function GetAllScreens() : unreal.TArray<unreal.displaycluster.UDisplayClusterScreenComponent>;
  @:ufunction(BlueprintCallable) public function GetScreensAmount() : unreal.Int32;
  
  /**
    Nodes
  **/
  @:ufunction(BlueprintCallable) public function GetNodeById(id : unreal.FString) : unreal.displaycluster.UDisplayClusterSceneComponent;
  @:ufunction(BlueprintCallable) public function GetAllNodes() : unreal.TArray<unreal.displaycluster.UDisplayClusterSceneComponent>;
  
  /**
    Navigation
  **/
  @:ufunction(BlueprintCallable) public function GetTranslationDirectionComponent() : unreal.USceneComponent;
  @:ufunction(BlueprintCallable) public function SetTranslationDirectionComponent(pComp : unreal.USceneComponent) : Void;
  @:ufunction(BlueprintCallable) public function SetTranslationDirectionComponentId(id : unreal.FString) : Void;
  @:ufunction(BlueprintCallable) public function GetRotateAroundComponent() : unreal.USceneComponent;
  @:ufunction(BlueprintCallable) public function SetRotateAroundComponent(pComp : unreal.USceneComponent) : Void;
  @:ufunction(BlueprintCallable) public function SetRotateAroundComponentId(id : unreal.FString) : Void;
  
  /**
    /
     Input API
    /
     Device information
  **/
  @:ufunction(BlueprintCallable) public function GetAxisDeviceAmount() : unreal.Int32;
  @:ufunction(BlueprintCallable) public function GetButtonDeviceAmount() : unreal.Int32;
  @:ufunction(BlueprintCallable) public function GetTrackerDeviceAmount() : unreal.Int32;
  @:ufunction(BlueprintCallable) public function GetAxisDeviceIds(IDs : unreal.PRef<unreal.TArray<unreal.FString>>) : Bool;
  @:ufunction(BlueprintCallable) public function GetButtonDeviceIds(IDs : unreal.PRef<unreal.TArray<unreal.FString>>) : Bool;
  @:ufunction(BlueprintCallable) public function GetTrackerDeviceIds(IDs : unreal.PRef<unreal.TArray<unreal.FString>>) : Bool;
  
  /**
    Buttons
  **/
  @:ufunction(BlueprintCallable) public function GetButtonState(DeviceId : unreal.FString, DeviceChannel : unreal.UInt8, CurState : Bool, IsChannelAvailable : Bool) : Void;
  @:ufunction(BlueprintCallable) public function IsButtonPressed(DeviceId : unreal.FString, DeviceChannel : unreal.UInt8, CurPressed : Bool, IsChannelAvailable : Bool) : Void;
  @:ufunction(BlueprintCallable) public function IsButtonReleased(DeviceId : unreal.FString, DeviceChannel : unreal.UInt8, CurReleased : Bool, IsChannelAvailable : Bool) : Void;
  @:ufunction(BlueprintCallable) public function WasButtonPressed(DeviceId : unreal.FString, DeviceChannel : unreal.UInt8, WasPressed : Bool, IsChannelAvailable : Bool) : Void;
  @:ufunction(BlueprintCallable) public function WasButtonReleased(DeviceId : unreal.FString, DeviceChannel : unreal.UInt8, WasReleased : Bool, IsChannelAvailable : Bool) : Void;
  
  /**
    Axes
  **/
  @:ufunction(BlueprintCallable) public function GetAxis(DeviceId : unreal.FString, DeviceChannel : unreal.UInt8, Value : unreal.Float32, IsAvailable : Bool) : Void;
  
  /**
    Trackers
  **/
  @:ufunction(BlueprintCallable) public function GetTrackerLocation(DeviceId : unreal.FString, DeviceChannel : unreal.UInt8, Location : unreal.PRef<unreal.FVector>, IsChannelAvailable : Bool) : Void;
  @:ufunction(BlueprintCallable) public function GetTrackerQuat(DeviceId : unreal.FString, DeviceChannel : unreal.UInt8, Rotation : unreal.PRef<unreal.FQuat>, IsChannelAvailable : Bool) : Void;
  
  /**
    /
     Render API
    /
  **/
  @:ufunction(BlueprintCallable) public function SetInterpupillaryDistance(dist : unreal.Float32) : Void;
  @:ufunction(BlueprintCallable) public function GetInterpupillaryDistance() : unreal.Float32;
  @:ufunction(BlueprintCallable) public function SetEyesSwap(swap : Bool) : Void;
  @:ufunction(BlueprintCallable) public function GetEyesSwap() : Bool;
  @:ufunction(BlueprintCallable) public function ToggleEyesSwap() : Bool;
  @:ufunction(BlueprintCallable) public function GetCullingDistance(NearClipPlane : unreal.Float32, FarClipPlane : unreal.Float32) : Void;
  @:ufunction(BlueprintCallable) public function SetCullingDistance(NearClipPlane : unreal.Float32, FarClipPlane : unreal.Float32) : Void;
  // DisplayClusterBlueprintAPI interface implementation
  
}
