/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.mediaframeworkutilities;

/**
  A base actor that
**/
@:umodule("MediaFrameworkUtilities")
@:glueCppIncludes("MediaBundleActorBase.h")
@:uextern @:uclass extern class AMediaBundleActorBase extends unreal.AActor {
  
  /**
    Get the Media Bundle.
  **/
  @:ufunction(BlueprintCallable) @:final public function GetMediaBundle() : unreal.mediaframeworkutilities.UMediaBundle;
  
  /**
    Play the Media Source.
  **/
  @:ufunction(BlueprintCallable) @:final public function RequestOpenMediaSource() : Bool;
  
  /**
    Close the Media Source.
  **/
  @:ufunction(BlueprintCallable) @:final public function RequestCloseMediaSource() : Void;
  
  /**
    Assign the primitive to render on. Will change the material for the Media material.
  **/
  @:ufunction(BlueprintCallable) @:final private function SetComponent(InPrimitive : unreal.UPrimitiveComponent, InMediaSound : unreal.mediaassets.UMediaSoundComponent) : Void;
  
  /**
    Index of the Material on the primitive
  **/
  @:uproperty private var PrimitiveMaterialIndex : unreal.Int32;
  
  /**
    Dynamic instance of the associated MediaBundle base Material
  **/
  @:uproperty private var Material : unreal.UMaterialInstanceDynamic;
  
  /**
    MediaSoundComponent associated to play sound of our MediaSource
  **/
  @:uproperty private var MediaSoundCmp : unreal.mediaassets.UMediaSoundComponent;
  
  /**
    PrimitiveComponent on which to attach our Material
  **/
  @:uproperty private var PrimitiveCmp : unreal.UPrimitiveComponent;
  
  /**
    Associated MediaBundle
  **/
  @:uproperty private var MediaBundle : unreal.mediaframeworkutilities.UMediaBundle;
  
  /**
    Texture containging 2D garbage matte mask
  **/
  @:uproperty public var GarbageMatteMask : unreal.UTextureRenderTarget2D;
  
}
