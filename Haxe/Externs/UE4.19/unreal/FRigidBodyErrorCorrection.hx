/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  Rigid body error correction data
**/
@:glueCppIncludes("Classes/Engine/EngineTypes.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FRigidBodyErrorCorrection {
  
  /**
    min squared body speed to perform velocity adjustment
  **/
  @:uproperty public var BodySpeedThresholdSq : unreal.Float32;
  
  /**
    inverted duration after which angular velocity adjustment will fix error
  **/
  @:uproperty public var AngularRecipFixTime : unreal.Float32;
  
  /**
    strength of snapping to desired angular velocity
  **/
  @:uproperty public var AngularInterpAlpha : unreal.Float32;
  
  /**
    max squared angle difference (in radians) to perform velocity adjustment
  **/
  @:uproperty public var AngularDeltaThreshold : unreal.Float32;
  
  /**
    inverted duration after which linear velocity adjustment will fix error
  **/
  @:uproperty public var LinearRecipFixTime : unreal.Float32;
  
  /**
    strength of snapping to desired linear velocity
  **/
  @:uproperty public var LinearInterpAlpha : unreal.Float32;
  
  /**
    max squared position difference to perform velocity adjustment
  **/
  @:uproperty public var LinearDeltaThresholdSq : unreal.Float32;
  
}
