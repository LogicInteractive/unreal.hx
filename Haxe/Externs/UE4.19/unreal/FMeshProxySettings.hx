/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("Classes/Engine/MeshMerging.h")
@:noCopy @:noEquals @:uextern @:ustruct extern class FMeshProxySettings {
  
  /**
    Whether to allow distance field to be computed for this mesh.  Disable this to save memory if you mesh will only rendered in the distance.
  **/
  @:uproperty public var bAllowDistanceField : Bool;
  
  /**
    Whether to allow adjacency buffers for tessellation in the merged mesh
  **/
  @:uproperty public var bAllowAdjacency : Bool;
  
  /**
    Level of detail of the landscape that should be used for the culling
  **/
  @:uproperty public var LandscapeCullingPrecision : unreal.ELandscapeCullingPrecision;
  
  /**
    Whether or not to use available landscape geometry to cull away invisible triangles
  **/
  @:uproperty public var bUseLandscapeCulling : Bool;
  @:deprecated @:uproperty public var bBakeVertexData_DEPRECATED : Bool;
  
  /**
    Whether Simplygon should recalculate normals, otherwise the normals channel will be sampled from the original mesh
  **/
  @:uproperty public var bRecalculateNormals : Bool;
  
  /**
    If ticked will compute the lightmap resolution by summing the dimensions for each mesh included for merging
  **/
  @:uproperty public var bComputeLightMapResolution : Bool;
  
  /**
    Lightmap resolution
  **/
  @:uproperty public var LightMapResolution : unreal.Int32;
  
  /**
    Angle at which a hard edge is introduced between faces
  **/
  @:uproperty public var HardAngleThreshold : unreal.Float32;
  
  /**
    Distance at which meshes should be merged together
  **/
  @:uproperty public var MergeDistance : unreal.Float32;
  
  /**
    Determines whether or not the correct LOD models should be calculated given the source meshes and transition size
  **/
  @:uproperty public var bCalculateCorrectLODModel : Bool;
  @:deprecated @:uproperty public var bExportSpecularMap_DEPRECATED : Bool;
  @:deprecated @:uproperty public var bExportRoughnessMap_DEPRECATED : Bool;
  @:deprecated @:uproperty public var bExportMetallicMap_DEPRECATED : Bool;
  @:deprecated @:uproperty public var bExportNormalMap_DEPRECATED : Bool;
  @:deprecated @:uproperty public var TextureHeight_DEPRECATED : unreal.Int32;
  @:deprecated @:uproperty public var TextureWidth_DEPRECATED : unreal.Int32;
  
  /**
    Material simplification
  **/
  @:uproperty public var MaterialSettings : unreal.FMaterialProxySettings;
  
  /**
    Override when converting multiple meshes for proxy LOD merging. Warning, large geometry with small sampling has very high memory costs
  **/
  @:uproperty public var VoxelSize : unreal.Float32;
  
  /**
    If true, Spatial Sampling Distance will not be automatically computed based on geometry and you must set it directly
  **/
  @:uproperty public var bOverrideVoxelSize : Bool;
  
  /**
    Screen size of the resulting proxy mesh in pixels
  **/
  @:uproperty public var ScreenSize : unreal.Int32;
  
}
