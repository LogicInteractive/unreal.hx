/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.sourcecontrol;

/**
  WARNING: This type was not defined as DLL export on its declaration. Because of that, some of its methods are inaccessible
  
  
**/
@:umodule("SourceControl")
@:glueCppIncludes("SourceControlHelpers.h")
@:noClass @:uextern @:uclass extern class USourceControlHelpers extends unreal.UObject {
  
  /**
    Helper function to get a filename for a package name.
    @param       InPackageName   The package name to get the filename for
    @return the filename
  **/
  @:ufunction(BlueprintCallable) static public function PackageFilename(InPackageName : unreal.FString) : unreal.FString;
  
  /**
    Helper function to convert package name array into a filename array.
    @param       InPackageNames  The package name array
    @return an array of filenames
  **/
  @:ufunction(BlueprintCallable) static public function PackageFilenames(InPackageNames : unreal.Const<unreal.PRef<unreal.TArray<unreal.FString>>>) : unreal.TArray<unreal.FString>;
  
  /**
    Helper function to convert a filename array to absolute paths.
    @param       InFileNames     The filename array
    @return an array of filenames, transformed into absolute paths
  **/
  @:ufunction(BlueprintCallable) static public function AbsoluteFilenames(InFileNames : unreal.Const<unreal.PRef<unreal.TArray<unreal.FString>>>) : unreal.TArray<unreal.FString>;
  
  /**
    Helper function to check out a file
    @param       InFile          The file path to check in
    @return      Success or failure of the checkout operation
  **/
  @:ufunction(BlueprintCallable) static public function CheckOutFile(InFile : unreal.FString) : Bool;
  
  /**
    Helper function to mark a file for add. Does nothing (and returns true) if the file is already under SC
    @param       InFile          The file path to check in
    @return      Success or failure of the mark for add operation
  **/
  @:ufunction(BlueprintCallable) static public function MarkFileForAdd(InFile : unreal.FString) : Bool;
  
  /**
    Helper function to copy a file into our 'source controlled' directories, handling checkout/add etc.
    @param       InDestFile                      The path to the destination file
    @param       InSourceFile            The path to the source file
    @param       InFileDescription       Description of the file to display to the user, e.g. "Text" or "Image"
    @param       OutFailReason           Text describing why the operation failed
    @return      Success or failure of the operation
  **/
  @:ufunction(BlueprintCallable) static public function CopyFileUnderSourceControl(InDestFile : unreal.FString, InSourceFile : unreal.FString, InFileDescription : unreal.Const<unreal.PRef<unreal.FText>>, OutFailReason : unreal.PRef<unreal.FText>) : Bool;
  
}
